workflows:
  sample-workflow:
    environment:
      flutter: stable

    scripts:
      - name: Set iOS deployment target to 13.0
        script: |
          if [ -f ios/Podfile ]; then
            sed -i '' "s/platform :ios, '9.0'/platform :ios, '13.0'/" ios/Podfile
          else
            echo "platform :ios, '13.0'" > ios/Podfile
          fi
          echo "Updated Podfile to iOS 13.0"

      - name: Check Ruby Version Before Update
        script: |
          ruby -v
          which ruby

      - name: Install and Use Ruby 3.1+
        script: |
          brew install rbenv
          rbenv install 3.1.4
          rbenv global 3.1.4
          echo 'export PATH="$HOME/.rbenv/bin:$PATH"' >> ~/.bashrc
          echo 'eval "$(rbenv init -)"' >> ~/.bashrc
          source ~/.bashrc
          ruby -v  # Confirm Ruby version

      - name: Install CocoaPods
        script: |
          gem install bundler
          gem install securerandom -v 0.3.2
          gem install cocoapods
          pod --version

      - name: Ensure Flutter dependencies are installed
        script: |
          flutter clean
          flutter pub get
          flutter pub run build_runner build --delete-conflicting-outputs
          echo "Flutter dependencies installed"

      - name: Prepare iOS environment
        script: |
          cd ios
          rm -rf Pods Podfile.lock
          pod deintegrate
          pod setup
          cd ..
          echo "iOS environment prepared"

      - name: Generate iOS workspace and fix missing environment files
        script: |
          cd ios
          flutter build ios --no-codesign
          [ -f Flutter/flutter_export_environment ] || touch Flutter/flutter_export_environment
          echo "Checked flutter_export_environment file"
          pod install --verbose
          cd ..
          echo "iOS workspace setup completed"

      - name: Build iOS
        script: |
          cd ios
          xcodebuild -workspace Runner.xcworkspace -scheme Runner -sdk iphoneos -configuration Release archive -archivePath ../build/Runner.xcarchive | xcpretty
          if [ ! -d "../build/Runner.xcarchive" ]; then
            echo "Xcode archive failed: Archive not found!"
            exit 1
          fi
          xcodebuild -exportArchive -archivePath ../build/Runner.xcarchive -exportOptionsPlist ./exportOptions.plist -exportPath ../build/ios/ipa | xcpretty
          cd ..
          echo "iOS IPA build completed"

      - name: Build Android (APK)
        script: |
          flutter build apk
          echo "Android APK build completed"

      - name: Publish Artifacts
        script: |
          mkdir -p build_outputs
          cp build/app/outputs/flutter-apk/app-release.apk build_outputs/
          cp -r build/ios/ipa/*.ipa build_outputs/
          echo "Artifacts copied for publishing"

    artifacts:
      - build_outputs/app-release.apk
      - build_outputs/*.ipa
